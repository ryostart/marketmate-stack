plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id "com.github.spotbugs" version "6.0.0"
}

group = 'com.marketmate'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}

repositories { mavenCentral() }

ext['flyway.version'] = '10.16.0'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    /** ★ Flyway 10 + PostgreSQL プラグイン */
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:4.4.0'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    runtimeOnly 'org.postgresql:postgresql'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}
test {
    useJUnitPlatform()
}
jacocoTestReport {
    reports { xml.required = true; html.required = true }
}
spotbugs {
    toolVersion = "4.8.3"
    effort = "default"
    reportLevel = "high"
}

// レポートをHTMLで出す（場所を明示）
tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
    reports {
        xml.required.set(false)
        sarif.required.set(false)
        html.required.set(true)
        html.outputLocation.set(layout.buildDirectory.file("reports/spotbugs/${name}.html"))
    }
}

tasks.named('test') { useJUnitPlatform() }
